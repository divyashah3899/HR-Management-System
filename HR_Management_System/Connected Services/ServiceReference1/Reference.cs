//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HR_Management_System.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employee1", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Employee1 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdharCardField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactNo_1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContactNo_2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DesignationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int E_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployeeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkExperienceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdharCard {
            get {
                return this.AdharCardField;
            }
            set {
                if ((object.ReferenceEquals(this.AdharCardField, value) != true)) {
                    this.AdharCardField = value;
                    this.RaisePropertyChanged("AdharCard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactNo_1 {
            get {
                return this.ContactNo_1Field;
            }
            set {
                if ((object.ReferenceEquals(this.ContactNo_1Field, value) != true)) {
                    this.ContactNo_1Field = value;
                    this.RaisePropertyChanged("ContactNo_1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactNo_2 {
            get {
                return this.ContactNo_2Field;
            }
            set {
                if ((object.ReferenceEquals(this.ContactNo_2Field, value) != true)) {
                    this.ContactNo_2Field = value;
                    this.RaisePropertyChanged("ContactNo_2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DOB {
            get {
                return this.DOBField;
            }
            set {
                if ((this.DOBField.Equals(value) != true)) {
                    this.DOBField = value;
                    this.RaisePropertyChanged("DOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Designation {
            get {
                return this.DesignationField;
            }
            set {
                if ((object.ReferenceEquals(this.DesignationField, value) != true)) {
                    this.DesignationField = value;
                    this.RaisePropertyChanged("Designation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int E_Id {
            get {
                return this.E_IdField;
            }
            set {
                if ((this.E_IdField.Equals(value) != true)) {
                    this.E_IdField = value;
                    this.RaisePropertyChanged("E_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmployeeType {
            get {
                return this.EmployeeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeTypeField, value) != true)) {
                    this.EmployeeTypeField = value;
                    this.RaisePropertyChanged("EmployeeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fname {
            get {
                return this.FnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FnameField, value) != true)) {
                    this.FnameField = value;
                    this.RaisePropertyChanged("Fname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lname {
            get {
                return this.LnameField;
            }
            set {
                if ((object.ReferenceEquals(this.LnameField, value) != true)) {
                    this.LnameField = value;
                    this.RaisePropertyChanged("Lname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkExperience {
            get {
                return this.WorkExperienceField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkExperienceField, value) != true)) {
                    this.WorkExperienceField = value;
                    this.RaisePropertyChanged("WorkExperience");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/addEmployee", ReplyAction="http://tempuri.org/IService/addEmployeeResponse")]
        void addEmployee(string fname, string lname, string contact1, string contact2, string email, string address, System.DateTime dob, string gender, string designation, string acard, string etype, string workexp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/addEmployee", ReplyAction="http://tempuri.org/IService/addEmployeeResponse")]
        System.Threading.Tasks.Task addEmployeeAsync(string fname, string lname, string contact1, string contact2, string email, string address, System.DateTime dob, string gender, string designation, string acard, string etype, string workexp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/updateEmployee", ReplyAction="http://tempuri.org/IService/updateEmployeeResponse")]
        void updateEmployee(int id, string fname, string lname, string contact1, string contact2, string email, string address, System.DateTime dob, string gender, string designation, string acard, string etype, string workexp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/updateEmployee", ReplyAction="http://tempuri.org/IService/updateEmployeeResponse")]
        System.Threading.Tasks.Task updateEmployeeAsync(int id, string fname, string lname, string contact1, string contact2, string email, string address, System.DateTime dob, string gender, string designation, string acard, string etype, string workexp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/deleteEmployee", ReplyAction="http://tempuri.org/IService/deleteEmployeeResponse")]
        void deleteEmployee(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/deleteEmployee", ReplyAction="http://tempuri.org/IService/deleteEmployeeResponse")]
        System.Threading.Tasks.Task deleteEmployeeAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/totalEmployee", ReplyAction="http://tempuri.org/IService/totalEmployeeResponse")]
        int totalEmployee();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/totalEmployee", ReplyAction="http://tempuri.org/IService/totalEmployeeResponse")]
        System.Threading.Tasks.Task<int> totalEmployeeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/addProject", ReplyAction="http://tempuri.org/IService/addProjectResponse")]
        void addProject(string name, string client, string duration, int manager, string technology, string cost);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/addProject", ReplyAction="http://tempuri.org/IService/addProjectResponse")]
        System.Threading.Tasks.Task addProjectAsync(string name, string client, string duration, int manager, string technology, string cost);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/updateProject", ReplyAction="http://tempuri.org/IService/updateProjectResponse")]
        void updateProject(int id, string name, string client, string duration, int manager, string technology, string cost);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/updateProject", ReplyAction="http://tempuri.org/IService/updateProjectResponse")]
        System.Threading.Tasks.Task updateProjectAsync(int id, string name, string client, string duration, int manager, string technology, string cost);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/deleteProject", ReplyAction="http://tempuri.org/IService/deleteProjectResponse")]
        void deleteProject(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/deleteProject", ReplyAction="http://tempuri.org/IService/deleteProjectResponse")]
        System.Threading.Tasks.Task deleteProjectAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/setLeaveStatus", ReplyAction="http://tempuri.org/IService/setLeaveStatusResponse")]
        void setLeaveStatus(int id, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/setLeaveStatus", ReplyAction="http://tempuri.org/IService/setLeaveStatusResponse")]
        System.Threading.Tasks.Task setLeaveStatusAsync(int id, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/applyLeave", ReplyAction="http://tempuri.org/IService/applyLeaveResponse")]
        void applyLeave(int id, string fname, string ltype, System.DateTime sdate, System.DateTime edate, string reason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/applyLeave", ReplyAction="http://tempuri.org/IService/applyLeaveResponse")]
        System.Threading.Tasks.Task applyLeaveAsync(int id, string fname, string ltype, System.DateTime sdate, System.DateTime edate, string reason);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/loginEmployee", ReplyAction="http://tempuri.org/IService/loginEmployeeResponse")]
        int loginEmployee(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/loginEmployee", ReplyAction="http://tempuri.org/IService/loginEmployeeResponse")]
        System.Threading.Tasks.Task<int> loginEmployeeAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/showDetails", ReplyAction="http://tempuri.org/IService/showDetailsResponse")]
        HR_Management_System.ServiceReference1.Employee1 showDetails(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/showDetails", ReplyAction="http://tempuri.org/IService/showDetailsResponse")]
        System.Threading.Tasks.Task<HR_Management_System.ServiceReference1.Employee1> showDetailsAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : HR_Management_System.ServiceReference1.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<HR_Management_System.ServiceReference1.IService>, HR_Management_System.ServiceReference1.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void addEmployee(string fname, string lname, string contact1, string contact2, string email, string address, System.DateTime dob, string gender, string designation, string acard, string etype, string workexp) {
            base.Channel.addEmployee(fname, lname, contact1, contact2, email, address, dob, gender, designation, acard, etype, workexp);
        }
        
        public System.Threading.Tasks.Task addEmployeeAsync(string fname, string lname, string contact1, string contact2, string email, string address, System.DateTime dob, string gender, string designation, string acard, string etype, string workexp) {
            return base.Channel.addEmployeeAsync(fname, lname, contact1, contact2, email, address, dob, gender, designation, acard, etype, workexp);
        }
        
        public void updateEmployee(int id, string fname, string lname, string contact1, string contact2, string email, string address, System.DateTime dob, string gender, string designation, string acard, string etype, string workexp) {
            base.Channel.updateEmployee(id, fname, lname, contact1, contact2, email, address, dob, gender, designation, acard, etype, workexp);
        }
        
        public System.Threading.Tasks.Task updateEmployeeAsync(int id, string fname, string lname, string contact1, string contact2, string email, string address, System.DateTime dob, string gender, string designation, string acard, string etype, string workexp) {
            return base.Channel.updateEmployeeAsync(id, fname, lname, contact1, contact2, email, address, dob, gender, designation, acard, etype, workexp);
        }
        
        public void deleteEmployee(int id) {
            base.Channel.deleteEmployee(id);
        }
        
        public System.Threading.Tasks.Task deleteEmployeeAsync(int id) {
            return base.Channel.deleteEmployeeAsync(id);
        }
        
        public int totalEmployee() {
            return base.Channel.totalEmployee();
        }
        
        public System.Threading.Tasks.Task<int> totalEmployeeAsync() {
            return base.Channel.totalEmployeeAsync();
        }
        
        public void addProject(string name, string client, string duration, int manager, string technology, string cost) {
            base.Channel.addProject(name, client, duration, manager, technology, cost);
        }
        
        public System.Threading.Tasks.Task addProjectAsync(string name, string client, string duration, int manager, string technology, string cost) {
            return base.Channel.addProjectAsync(name, client, duration, manager, technology, cost);
        }
        
        public void updateProject(int id, string name, string client, string duration, int manager, string technology, string cost) {
            base.Channel.updateProject(id, name, client, duration, manager, technology, cost);
        }
        
        public System.Threading.Tasks.Task updateProjectAsync(int id, string name, string client, string duration, int manager, string technology, string cost) {
            return base.Channel.updateProjectAsync(id, name, client, duration, manager, technology, cost);
        }
        
        public void deleteProject(int id) {
            base.Channel.deleteProject(id);
        }
        
        public System.Threading.Tasks.Task deleteProjectAsync(int id) {
            return base.Channel.deleteProjectAsync(id);
        }
        
        public void setLeaveStatus(int id, string status) {
            base.Channel.setLeaveStatus(id, status);
        }
        
        public System.Threading.Tasks.Task setLeaveStatusAsync(int id, string status) {
            return base.Channel.setLeaveStatusAsync(id, status);
        }
        
        public void applyLeave(int id, string fname, string ltype, System.DateTime sdate, System.DateTime edate, string reason) {
            base.Channel.applyLeave(id, fname, ltype, sdate, edate, reason);
        }
        
        public System.Threading.Tasks.Task applyLeaveAsync(int id, string fname, string ltype, System.DateTime sdate, System.DateTime edate, string reason) {
            return base.Channel.applyLeaveAsync(id, fname, ltype, sdate, edate, reason);
        }
        
        public int loginEmployee(string username, string password) {
            return base.Channel.loginEmployee(username, password);
        }
        
        public System.Threading.Tasks.Task<int> loginEmployeeAsync(string username, string password) {
            return base.Channel.loginEmployeeAsync(username, password);
        }
        
        public HR_Management_System.ServiceReference1.Employee1 showDetails(int id) {
            return base.Channel.showDetails(id);
        }
        
        public System.Threading.Tasks.Task<HR_Management_System.ServiceReference1.Employee1> showDetailsAsync(int id) {
            return base.Channel.showDetailsAsync(id);
        }
    }
}
